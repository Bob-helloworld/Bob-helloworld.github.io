<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>日常学习总结</title>
    <link href="/2023/09/03/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <url>/2023/09/03/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Git使用"><a href="#1-Git使用" class="headerlink" title="1.Git使用"></a>1.Git使用</h1><p>git常用命令：<a href="https://www.cnblogs.com/kenshinobiy/p/4543976.html">https://www.cnblogs.com/kenshinobiy/p/4543976.html</a></p><p><img src="/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/011500266295799.jpg" alt="img"></p><h2 id="1-1命令行将本地项目推送到github上"><a href="#1-1命令行将本地项目推送到github上" class="headerlink" title="1.1命令行将本地项目推送到github上"></a>1.1命令行将本地项目推送到github上</h2><p>在需要上传的项目文件夹下打开git命令行，执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init  // 初始化仓库<br>git add . // 把项目添加到仓库<br>git status // 查看仓库状态<br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span><br></code></pre></td></tr></table></figure><p>如果不能推送到远端仓库，参考：<a href="https://segmentfault.com/a/1190000022272311">https://segmentfault.com/a/1190000022272311</a></p><h1 id="2-数据库使用"><a href="#2-数据库使用" class="headerlink" title="2.数据库使用"></a>2.数据库使用</h1><h2 id="2-1Redis使用"><a href="#2-1Redis使用" class="headerlink" title="2.1Redis使用"></a>2.1Redis使用</h2><p>Linux安装redis详细过程：<a href="https://cloud.tencent.com/developer/article/1823412">https://cloud.tencent.com/developer/article/1823412</a> 或<a href="https://segmentfault.com/a/1190000023364209">https://segmentfault.com/a/1190000023364209</a></p><p>SpringBoot集成Redis(全网最全)：<a href="https://juejin.cn/post/7076244567569203208">https://juejin.cn/post/7076244567569203208</a></p><h2 id="2-2MongoDB使用"><a href="#2-2MongoDB使用" class="headerlink" title="2.2MongoDB使用"></a>2.2MongoDB使用</h2><p>linux安装MongoDB:<a href="https://blog.csdn.net/qq_35794202/article/details/121849807">https://blog.csdn.net/qq_35794202/article/details/121849807</a></p><p>SpringBoot+MongoDB 实现图片存取:<a href="https://segmentfault.com/a/1190000023254447">https://segmentfault.com/a/1190000023254447</a></p><h1 id="3-java-springboot"><a href="#3-java-springboot" class="headerlink" title="3.java&#x2F;springboot"></a>3.java&#x2F;springboot</h1><p>Springboot 根据数据库表自动生成实体类和Mapper：<a href="https://developer.aliyun.com/article/994856">https://developer.aliyun.com/article/994856</a></p><p>Idea 使用插件mybatis-generator-plus生成mapper文件：<a href="https://www.macrozheng.com/tool/idea_plugin_mybatisx.html#%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81">https://www.macrozheng.com/tool/idea_plugin_mybatisx.html#%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Go语言学习</title>
    <link href="/2023/09/03/Go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    <url>/2023/09/03/Go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="1-Go环境配置及语言基础"><a href="#1-Go环境配置及语言基础" class="headerlink" title="1.Go环境配置及语言基础"></a>1.Go环境配置及语言基础</h2><p><a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/preface.md">https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/preface.md</a></p><h2 id="2-Go连接数据库"><a href="#2-Go连接数据库" class="headerlink" title="2.Go连接数据库"></a>2.Go连接数据库</h2><p>golang连接数据库用户的驱动是：<a href="https://link.jianshu.com/?t=https://github.com/go-sql-driver/mysql">go-sql-driver</a></p><ul><li>安装方式：打开命令行，执行go命令：go get -u github.com&#x2F;go-sql-driver&#x2F;mysql</li></ul><h3 id="mysql数据库连接"><a href="#mysql数据库连接" class="headerlink" title="mysql数据库连接"></a><strong>mysql数据库连接</strong></h3><ul><li>构建连接, 格式是：”用户名:密码@tcp(IP:端口)&#x2F;数据库?charset&#x3D;utf8”</li><li>打开数据库,前者是驱动名，所以要导入： _ “github.com&#x2F;go-sql-driver&#x2F;mysql”</li><li>设置数据库最大连接数和设置上数据库最大闲置连接数</li><li>验证连接：使用Ping()函数<br> 代码参考如下：</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">//数据库配置</span><br><span class="hljs-keyword">const</span> (<br>    userName = <span class="hljs-string">&quot;root&quot;</span><br>    password = <span class="hljs-string">&quot;123456&quot;</span><br>    ip = <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>    port = <span class="hljs-string">&quot;3306&quot;</span><br>    dbName = <span class="hljs-string">&quot;loginserver&quot;</span><br>)<br><span class="hljs-comment">//Db数据库连接池</span><br><span class="hljs-keyword">var</span> DB *sql.DB<br><br><span class="hljs-comment">//注意方法名大写，就是public</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">InitDB</span><span class="hljs-params">()</span></span>  &#123;<br>    <span class="hljs-comment">//构建连接：&quot;用户名:密码@tcp(IP:端口)/数据库?charset=utf8&quot;</span><br>    path := strings.Join([]<span class="hljs-type">string</span>&#123;userName, <span class="hljs-string">&quot;:&quot;</span>, password, <span class="hljs-string">&quot;@tcp(&quot;</span>,ip, <span class="hljs-string">&quot;:&quot;</span>, port, <span class="hljs-string">&quot;)/&quot;</span>, dbName, <span class="hljs-string">&quot;?charset=utf8&quot;</span>&#125;, <span class="hljs-string">&quot;&quot;</span>)<br><br>    <span class="hljs-comment">//打开数据库,前者是驱动名，所以要导入： _ &quot;github.com/go-sql-driver/mysql&quot;</span><br>    DB, _ = sql.Open(<span class="hljs-string">&quot;mysql&quot;</span>, path)<br>    <span class="hljs-comment">//设置数据库最大连接数</span><br>    DB.SetConnMaxLifetime(<span class="hljs-number">100</span>)<br>    <span class="hljs-comment">//设置上数据库最大闲置连接数</span><br>    DB.SetMaxIdleConns(<span class="hljs-number">10</span>)<br>    <span class="hljs-comment">//验证连接</span><br>    <span class="hljs-keyword">if</span> err := DB.Ping(); err != <span class="hljs-literal">nil</span>&#123;<br>        fmt.Println(<span class="hljs-string">&quot;opon database fail&quot;</span>)<br>        <span class="hljs-keyword">return</span><br>    &#125;<br>    fmt.Println(<span class="hljs-string">&quot;connnect success&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="mysql数据库的增删查改"><a href="#mysql数据库的增删查改" class="headerlink" title="mysql数据库的增删查改"></a><strong>mysql数据库的增删查改</strong></h3><p>参考：<a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/05.2.md">https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/05.2.md</a></p><h2 id="3-GoWeb项目设计"><a href="#3-GoWeb项目设计" class="headerlink" title="3.GoWeb项目设计"></a>3.GoWeb项目设计</h2><h3 id="3-1接口设计"><a href="#3-1接口设计" class="headerlink" title="3.1接口设计"></a>3.1接口设计</h3><table><thead><tr><th>序号</th><th>接口名称</th><th>请求参数</th><th>返回参数</th><th>变量名解释</th></tr></thead><tbody><tr><td>1</td><td>user_register</td><td>{      “user_id”: 1,      “user_phone”: “17748087063”,      “user_password”: “123456”,      “user_name”:  “liupingjie”,       “user_carid”: “沪FZ2816”    }</td><td>{  error_code:1,  msg:”success”  }  1000:account already exists  1001：account format error  “user_credit”:  “513901200206254330”,  “user_name”: “liupingjie”,      “user_address”: “资阳市”,      “user_right”: “1”,      “user_face”: “0”,</td><td></td></tr><tr><td>2</td><td>user_login</td><td>{  user_phone:17748087063,  user_password:test001,  }</td><td>{      “msg”: “success”,      “error_code”: 1,      “user”: {        “user_id”: 2,        “user_phone”: “17748087052”,        “user_credit”: “513901200206254330”,        “user_name”: “liuyujie”,        “user_address”: “资阳市”,        “user_right”: “1”,        “user_face”:         “user_carid”: “川AZ2816”      }  }2000:account not exists  2001:account or password error</td><td></td></tr><tr><td>3</td><td>update_user_info</td><td>{      “user_phone”: “17748087063”,      “new_password”: “1234567”,      “user_credit”: “”,      “user_name”: “liupingjie”,      “user_address”: “资阳市雁江区”,      “old_password”: “123456”,      “user_carid”: “川AZ2816”    }</td><td>{  error_code:1,  msg:”success”  }  3000:account error  3001: account already exists  3002: password error</td><td></td></tr><tr><td>4</td><td>generate_access_record</td><td>{    “user_phone”: “17748087063”,    “device_id”:”device01”  }</td><td>{  error_code:1,  msg:”success”  }  4000: device_id error  4001: write mysql error  4002: less than two minutes apart  4003: account not exists</td><td></td></tr><tr><td>5</td><td>update_user_face</td><td>file:111555.jpg  {        “user_id”: 1,        “user_phone”: “17748087052”,  “user_name”:”liupingjie”     }</td><td>{  error_code:1,  msg:”success”  }  5000: account not exists   5001:file type error，just support jpg or png or jpeg  5002: write mysql error  5003: register baiduyun error</td><td></td></tr><tr><td>6</td><td>search_access_record</td><td>{      “user_phone”: “17748087063”  }</td><td>{      “result”: 1,      “msg”: “查询成功”,      “access_record”: [        {        “user_phone”:  “17748087063”,        “location”: “资阳市雁江区弘城水韵”,        “position”:  “104.680720,30.104962”,        “access_time”:  “2022-02-27 16:29:57”        }      ]  }</td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td>1</td><td>&#x2F;admin&#x2F;login</td><td>{      “manager_account”: “admin001”,      “manager_password”:”admin001”  }</td><td>{      “msg”: “success”,      “manager”: {        “manager_id”: 1,        “manager_account”: “admin001”      },      “error_code”: 1  }  10000: account not exists  10001: account or password error</td><td></td></tr><tr><td>2</td><td>&#x2F;admin&#x2F;set_device_info</td><td>{      “device_id”: “device001”,      “location”:”资阳市雁江区弘城水韵”  }</td><td>{  error_code:1,  msg:”success”  }  11001: location error  11002: device_id already exists  11003: write mysql error</td><td></td></tr><tr><td>3</td><td>&#x2F;admin&#x2F;find_all_device</td><td></td><td>{    “result”: 1,    “msg”: “success”,    “deviceList”: [      {        “device_id”: “device001”,        “serial_id”: 3,        “location”: “资阳市雁江区弘城水韵”,        “position”: “104.680720,30.104962”      }    ]  }</td><td></td></tr></tbody></table><h3 id="3-2-Model（数据库）设计"><a href="#3-2-Model（数据库）设计" class="headerlink" title="3.2 Model（数据库）设计"></a>3.2 Model（数据库）设计</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">type</span> User <span class="hljs-keyword">struct</span>&#123;<br><span class="hljs-comment">// public</span><br>Uid <span class="hljs-type">int</span> <span class="hljs-string">`json:&quot;uid&quot;`</span><br>Account <span class="hljs-type">int</span> <span class="hljs-string">`json:&quot;account&quot;`</span><br>Nickname <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;nickname&quot;`</span><br>Birth_time <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;birth_time&quot;`</span><br>User_photo <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;user_photo&quot;`</span><br>Password <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;password&quot;`</span><br>User_right <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;user_right&quot;`</span><br>Created_time <span class="hljs-type">string</span> <span class="hljs-string">`gorm:&quot;&lt;-:create&quot;`</span> <span class="hljs-comment">//只读和创建</span><br>&#125;<br><span class="hljs-keyword">type</span> Blog <span class="hljs-keyword">struct</span>&#123;<br><span class="hljs-comment">// public</span><br>Blog_id <span class="hljs-type">int</span> <span class="hljs-string">`json:&quot;blog_id&quot;`</span><br>Blog_time <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;blog_time&quot;`</span><br>Blog_theme <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;blog_theme&quot;`</span><br>Blog_location <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;blog_location&quot;`</span><br>Blog_content <span class="hljs-type">string</span> <span class="hljs-string">`json:&quot;blog_content&quot;`</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-3-config配置"><a href="#3-3-config配置" class="headerlink" title="3.3 config配置"></a>3.3 config配置</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs arduino">/GoWebDemo<br>├── config<br>│   ├── config.go<br>│   ├── config.json<br>│   └── mysql.go<br></code></pre></td></tr></table></figure><p>config.json保存mysql连接信息</p><p>mysql.go是mysqlConfig的实例</p><p>config.go读取config.json中的配置信息，然后初始化数据库。config.go代码如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> config<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;encoding/json&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;io/ioutil&quot;</span><br><span class="hljs-string">&quot;os&quot;</span><br><span class="hljs-string">&quot;path&quot;</span><br><span class="hljs-string">&quot;runtime&quot;</span><br><span class="hljs-comment">// &quot;os/exec&quot;</span><br><span class="hljs-string">&quot;path/filepath&quot;</span><br><span class="hljs-comment">// &quot;strings&quot;</span><br><span class="hljs-string">&quot;unicode/utf8&quot;</span><br><span class="hljs-string">&quot;gorm.io/driver/mysql&quot;</span><br><span class="hljs-string">&quot;gorm.io/gorm&quot;</span><br><span class="hljs-string">&quot;gorm.io/gorm/logger&quot;</span><br>)<br><span class="hljs-keyword">type</span> configData <span class="hljs-keyword">struct</span> &#123;<br>    DB     mysqlConfig  <span class="hljs-string">`json:&quot;mysql&quot;`</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">initPath</span><span class="hljs-params">()</span></span> &#123;<br>    sep := <span class="hljs-type">string</span>(os.PathSeparator)<br><span class="hljs-comment">// 获取当前文件的目录</span><br>    <span class="hljs-comment">//root := filepath.Dir(os.Args[0])</span><br>    <span class="hljs-comment">//ExecPath, _ = filepath.Abs(root)</span><br><span class="hljs-comment">// 执行命令的目录</span><br>    ExecPath, _ = os.Getwd()<br>    length := utf8.RuneCountInString(ExecPath)<br>    lastChar := ExecPath[length<span class="hljs-number">-1</span>:]<br>    <span class="hljs-keyword">if</span> lastChar != sep &#123;<br>        ExecPath = ExecPath + sep<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">initJSON</span><span class="hljs-params">()</span></span> &#123;<br>    <span class="hljs-comment">//获取到当前这个函数所在的*.go文件的路径</span><br>    _, filename, _, _ := runtime.Caller(<span class="hljs-number">1</span>)<br>    fmt.Println(<span class="hljs-string">&quot;当前的操作文件路径为:&quot;</span>,filename)<br>    configfile := filepath.Join(path.Dir(filename), <span class="hljs-string">&quot;/config.json&quot;</span>)<br>    rawConfig, err := ioutil.ReadFile(configfile)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>        <span class="hljs-comment">//未初始化</span><br>        fmt.Println(<span class="hljs-string">&quot;Invalid Config: &quot;</span>, err.Error())<br>        os.Exit(<span class="hljs-number">-1</span>)<br>    &#125;<br><span class="hljs-comment">// 将rawConfig中的字段与JsonData的字段一一对应赋值</span><br>    <span class="hljs-keyword">if</span> err := json.Unmarshal(rawConfig, &amp;JsonData); err != <span class="hljs-literal">nil</span> &#123;<br>        fmt.Println(<span class="hljs-string">&quot;Invalid Config: &quot;</span>, err.Error())<br>        os.Exit(<span class="hljs-number">-1</span>)<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">InitDB</span><span class="hljs-params">(setting *mysqlConfig)</span></span> <span class="hljs-type">error</span> &#123;<br>    <span class="hljs-keyword">var</span> db *gorm.DB<br>    <span class="hljs-keyword">var</span> err <span class="hljs-type">error</span><br>    url := fmt.Sprintf(<span class="hljs-string">&quot;%s:%s@tcp(%s:%d)/%s?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span>,<br>        setting.User, setting.Password, setting.Host, setting.Port, setting.Database)<br>    setting.Url = url<br>    db, err = gorm.Open(mysql.Open(url), &amp;gorm.Config&#123;Logger:logger.Default.LogMode(logger.Info),&#125;)<br>    <span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>        <span class="hljs-keyword">return</span> err<br>    &#125;<br><br>    sqlDB, err := db.DB()<br>    <span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>        <span class="hljs-keyword">return</span> err<br>    &#125;<br><br>    sqlDB.SetMaxIdleConns(<span class="hljs-number">1000</span>)<br>    sqlDB.SetMaxOpenConns(<span class="hljs-number">100000</span>)<br>    sqlDB.SetConnMaxLifetime(<span class="hljs-number">-1</span>)<br><br>    MysqlDb = db<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br><br><span class="hljs-keyword">var</span> ExecPath <span class="hljs-type">string</span><br><span class="hljs-keyword">var</span> JsonData configData<br><span class="hljs-keyword">var</span> MysqlDb *gorm.DB<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span> &#123;<br>    initPath()<br>    <span class="hljs-comment">// fmt.Println(ExecPath)</span><br>    <span class="hljs-comment">//读取json</span><br>    initJSON()<br>    <span class="hljs-comment">//初始化数据库</span><br>    err := InitDB(&amp;JsonData.DB)<br>    <span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>        fmt.Println(<span class="hljs-string">&quot;Failed To Connect Database: &quot;</span>, err.Error())<br>        os.Exit(<span class="hljs-number">-1</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux服务器相关问题解决</title>
    <link href="/2023/08/22/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2023/08/22/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/08/22/hello-world/"/>
    <url>/2023/08/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
